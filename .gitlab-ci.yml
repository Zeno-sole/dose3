variables:
  GIT_STRATEGY: "fetch"
  GIT_DEPTH: "1"

stages:
  - build

build:
  image: ocaml/opam2
  stage: build
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
      - ~/.opam
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - _build/
    expire_in: 1 day
  tags:
    - gitlab-org
  script:
    - sudo apt-get update
    - sudo apt-get install -y
        autoconf
        automake
        grep-dctrl
        libbz2-dev
        libev-dev
        libgmp-dev
        libhidapi-dev
        m4
        pandoc
        perl
        pkg-config
        zlib1g-dev
    - opam init
    - opam remote add opam http://opam.ocaml.org
    - opam remote
    - opam show dune
    - opam depext
    - opam install dune.2.7.1
    - opam install --with-test --with-doc --deps-only .
    - make all
    - make test
    - opam clean

# make the linting a separate job because:
#   - installing ocamlformat and dependencies from opam takes 5 minutes
#   - avoiding to taint the build environment with additional packages
lint:
  image: ocaml/opam2
  stage: build
  script:
    - sudo apt-get update
    - sudo apt-get install -y m4
    - opam init
    - opam remote add opam http://opam.ocaml.org
      # rebuild dose3.opam to check whether the file in git matches what is
      # generated by dune
    - opam install dune.2.7.1
    - dune build dose3.opam
    - git diff --exit-code
      # check whether source code complies with ocamlformat
    - opam install ocamlformat
    - dune build @fmt
    - opam clean

pages:
  image: ocaml/opam2
  stage: build
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
      - ~/.opam
      - doc/rtd/_build
  artifacts:
    paths:
      - public/
        #  rules:
        #    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - sudo apt-get update
    - sudo apt-get install -y
        autoconf
        automake
        graphviz
        libbz2-dev
        libev-dev
        libgmp-dev
        libhidapi-dev
        m4
        pandoc
        pkg-config
        python3
        python3-virtualenv
        python3-yaml
        texlive-latex-base
        texlive-latex-extra
        zlib1g-dev
    - opam init
    - opam remote add opam http://opam.ocaml.org
    - opam install --with-test --with-doc --deps-only .
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
    - source $HOME/.poetry/env
    - env --chdir=doc/rtd poetry install
    - make doc
    - mkdir public
    - cp -a doc/rtd/_build/* public
    - cp -a _build/default/_doc/_html public/api
